import { Button, Col, Drawer, Layout, Menu, Row, Tabs, theme } from "antd";
import Link from "next/link";
import Head from "next/head";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { MenuOutlined } from "@ant-design/icons";
const { Header, Content, Footer } = Layout;

const RootLayout = ({ children }) => {
  const {
    token: { colorBgContainer },
  } = theme.useToken();
  const [selectedKey, setSelectedKey] = useState("home");
  const [visible, setVisible] = useState(false);
  const router = useRouter();

  const paths = [
    {
      page: "Home",
      route: "/",
      Key: "home",
    },
    {
      page: "Universites",
      route: "/universities",
      Key: "universities",
    },
    {
      page: "About",
      route: "/about",
      Key: "about",
    },
    {
      page: "Services",
      route: "/services",
      Key: "services",
    },
    {
      page: "Contact",
      route: "/contact",
      Key: "contact",
    },
  ];

  const navigationRoutes = [
    "home",
    "universities",
    "about",
    "services",
    "contact",
  ];

  const [open, setOpen] = useState(false);

  const showDrawer = () => {
    setOpen(true);
  };
  const onClose = () => {
    setOpen(false);
  };

  useEffect(() => {
    // Close the drawer when the path changes
    onClose();
  }, [router.asPath]);

  const handleMenuClick = (e) => {
    setSelectedKey(e.key);
  };

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <Layout className="layout">
        <Header className={"header"}>
          <div className={"container   MainHead"}>
            <div className="">
              <Link href="/">
                <h1 className="logo">Sorted</h1>
              </Link>
            </div>

            <div className="Header_Menu ">
              <div className="dextop">
                <nav className="nav_container">
                  {navigationRoutes.map((singleRoute) => {
                    return (
                      <NavigationLink
                        key={singleRoute}
                        href={`/${singleRoute}`}
                        text={singleRoute}
                        router={router}
                      />
                    );
                  })}
                </nav>
              </div>

              <div className={"mobileMenu"}>
                <Button className="custom-drawer-button" onClick={showDrawer}>
                  <MenuOutlined style={{ fontSize: "30px" }} />
                </Button>
                <Drawer placement="right" onClose={onClose} open={open}>
                  <nav className="nav_container_mobile">
                    {navigationRoutes.map((singleRoute) => {
                      return (
                        <NavigationLink
                          key={singleRoute}
                          href={`/${singleRoute}`}
                          text={singleRoute}
                          router={router}
                        />
                      );
                    })}
                  </nav>
                </Drawer>
              </div>
            </div>
          </div>
        </Header>
        <Content>
          <div
            className="site-layout-content"
            // style={{
            //     minHeight: "100vh",
            // }}
          >
            {children}
          </div>
        </Content>
        <Footer className="footer">
          <Content className={"container"}>
            <div className="footer-content">
              <div className="footer-left">
                <h2>SORTED EDUCATION HELP CENTER</h2>
              </div>
              <div className="footer-right">
                <h2>abdulla@sortededucation.com</h2>
              </div>
            </div>
          </Content>
        </Footer>
      </Layout>
    </>
  );
};
export default RootLayout;
function NavigationLink({ href, text, router }) {
  const isActive = router.asPath === (href === "/home" ? "/" : href);
  return (
    <Link legacyBehavior href={href === "/home" ? "/" : href} passHref>
      <a
        href={href === "/home" ? "/" : href}
        className={`${isActive && "nav_item_active"} nav_item`}
      >
        {text}
      </a>
    </Link>
  );
}
